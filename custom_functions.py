# -*- coding: utf-8 -*-
"""custom_functions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vmIxHeymYdzr2knbbkKjZHXqbhxhEjgE
"""

import pandas as pd
from sklearn.metrics import recall_score
from sklearn.metrics import accuracy_score
from sklearn.metrics import precision_score
from sklearn.metrics import f1_score

def get_coefs(model):

  model_coefs = pd.DataFrame([round(model.intercept_[0],3)],
                           index = ['Intercept'],
                           columns = ['Coefficients'])

  model_coefs = pd.concat([model_coefs, pd.DataFrame(model.coef_.transpose(), # organize coefficients as a dataframe and output
                   columns = ['Coefficients'], # name the column Coefficients
                   index = model.feature_names_in_).round(3)])

  return model_coefs

def compute_metrics(model, x, y):
  y_train_pred = model.predict(x)
  pred_vs_actual = pd.DataFrame(y_train_pred, columns=['Predictions'])
  pred_vs_actual['Actual'] = y.values
  accuracy = accuracy_score(pred_vs_actual['Actual'], pred_vs_actual['Predictions'])
  sensitivity = recall_score(pred_vs_actual['Actual'], pred_vs_actual['Predictions'], pos_label=1)
  specificity = recall_score(pred_vs_actual['Actual'], pred_vs_actual['Predictions'], pos_label=0)
  fscore = f1_score(pred_vs_actual['Actual'], pred_vs_actual['Predictions'])
  perf = [accuracy,sensitivity,specificity,fscore]
  perf = pd.DataFrame(perf, index = ['Accuracy','Sensitivity','Specificity','F-Score'])

  return pred_vs_actual, perf